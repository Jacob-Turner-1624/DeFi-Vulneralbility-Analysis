2.sol :
==== External Call To User-Supplied Address ====


SWC ID: 107


Severity: Low


Contract: USDCToken


Function name: approve(address,uint256) or approve(address,uint256) or approve(address,uint256) or approve(address,uint256)


PC address: 3435


Estimated Gas Usage: 3664 - 38985


A call to a user-supplied address is executed.


An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.


--------------------


In file: /home/mythril/2.sol:376




ted) {


            return StandardToken(upgradedAddress).allowance(_owner, _spender)




--------------------


Initial State:




Account: [CREATOR], balance: 0x22000000004000802, nonce:0, storage:{}


Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}




Transaction Sequence:




Caller: [CREATOR], calldata: , value: 0x0


Caller: [CREATOR], function: deprecate(address), txdata: 0x0753c30c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0


Caller: [CREATOR], function: approve(address,uint256), txdata: 0x095ea7b306060606060606060606060600000000000010080000000200000000000000000606060606060606060606060000000000000000000000000000000000000000, value: 0x0




==== External Call To User-Supplied Address ====


SWC ID: 107


Severity: Low


Contract: USDCToken


Function name: totalSupply() or totalSupply() or totalSupply() or totalSupply() or totalSupply() or totalSupply() or totalSupply()


PC address: 3937


Estimated Gas Usage: 3626 - 39129


A call to a user-supplied address is executed.


An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.


--------------------


In file: /home/mythril/2.sol:405




ces[owner] + amount > balances[owner]);




   




--------------------


Initial State:




Account: [CREATOR], balance: 0x2, nonce:0, storage:{}


Account: [ATTACKER], balance: 0x200, nonce:0, storage:{}




Transaction Sequence:




Caller: [CREATOR], calldata: , value: 0x0


Caller: [CREATOR], function: deprecate(address), txdata: 0x0753c30c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0


Caller: [ATTACKER], function: totalSupply(), txdata: 0x18160ddd, value: 0x0




==== External Call To User-Supplied Address ====


SWC ID: 107


Severity: Low


Contract: USDCToken


Function name: transferFrom(address,address,uint256) or transferFrom(address,address,uint256) or transferFrom(address,address,uint256) or transferFrom(address,address,uint256)


PC address: 4451


Estimated Gas Usage: 5586 - 41852


A call to a user-supplied address is executed.


An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.


--------------------


In file: /home/mythril/2.sol:358




ated) {


            return UpgradedStandardToken(upgradedAddress).balanceOf(who);


        }




--------------------


Initial State:




Account: [CREATOR], balance: 0x0, nonce:0, storage:{}


Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}




Transaction Sequence:




Caller: [CREATOR], calldata: , value: 0x0


Caller: [CREATOR], function: deprecate(address), txdata: 0x0753c30c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0


Caller: [SOMEGUY], function: transferFrom(address,address,uint256), txdata: 0x23b872dd, value: 0x0




==== External Call To User-Supplied Address ====


SWC ID: 107


Severity: Low


Contract: USDCToken


Function name: balanceOf(address) or balanceOf(address) or balanceOf(address) or balanceOf(address) or balanceOf(address) or balanceOf(address) or balanceOf(address)


PC address: 5121


Estimated Gas Usage: 3978 - 39576


A call to a user-supplied address is executed.


An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.


--------------------


In file: /home/mythril/2.sol:368




upgradedAddress).approveByLegacy(msg.sender, _spender




--------------------


Initial State:




Account: [CREATOR], balance: 0x80000c0204, nonce:0, storage:{}


Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}




Transaction Sequence:




Caller: [CREATOR], calldata: , value: 0x0


Caller: [CREATOR], function: deprecate(address), txdata: 0x0753c30c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0


Caller: [ATTACKER], function: balanceOf(address), txdata: 0x70a08231, value: 0x0




==== External Call To User-Supplied Address ====


SWC ID: 107


Severity: Low


Contract: USDCToken


Function name: transfer(address,uint256) or transfer(address,uint256) or transfer(address,uint256) or transfer(address,uint256) or transfer(address,uint256) or transfer(address,uint256) or transfer(address,uint256)


PC address: 6019


Estimated Gas Usage: 5845 - 42016


A call to a user-supplied address is executed.


An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.


--------------------


In file: /home/mythril/2.sol:348




equire(!isBlackListed[_from]);


        if (deprecated) {


            return Upgr




--------------------


Initial State:




Account: [CREATOR], balance: 0x1000400809, nonce:0, storage:{}


Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}




Transaction Sequence:




Caller: [CREATOR], calldata: , value: 0x0


Caller: [CREATOR], function: deprecate(address), txdata: 0x0753c30c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0


Caller: [ATTACKER], function: transfer(address,uint256), txdata: 0xa9059cbb, value: 0x0




==== External Call To User-Supplied Address ====


SWC ID: 107


Severity: Low


Contract: USDCToken


Function name: allowance(address,address) or allowance(address,address) or allowance(address,address) or allowance(address,address)


PC address: 7462


Estimated Gas Usage: 4246 - 39939


A call to a user-supplied address is executed.


An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.


--------------------


In file: /home/mythril/2.sol:387




ss);


    }




    // deprecate current contract if favour of




--------------------


Initial State:




Account: [CREATOR], balance: 0x814000100000102, nonce:0, storage:{}


Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}




Transaction Sequence:




Caller: [CREATOR], calldata: , value: 0x0


Caller: [CREATOR], function: deprecate(address), txdata: 0x0753c30c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0


Caller: [ATTACKER], function: allowance(address,address), txdata: 0xdd62ed3e, value: 0x0




==== Exception State ====


SWC ID: 110


Severity: Medium


Contract: USDCToken


Function name: transferFrom(address,address,uint256) or transferFrom(address,address,uint256) or transferFrom(address,address,uint256) or transferFrom(address,address,uint256)


PC address: 11283


Estimated Gas Usage: 6123 - 7778


An assertion violation was triggered.


It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).


--------------------


In file: /home/mythril/2.sol:182




dAmount);


        if (




--------------------


Initial State:




Account: [CREATOR], balance: 0x10100010004ad19, nonce:0, storage:{}


Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}




Transaction Sequence:




Caller: [CREATOR], calldata: , value: 0x0


Caller: [SOMEGUY], function: transferFrom(address,address,uint256), txdata: 0x23b872dd00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000080000000000000000000000000000000000000000020000008100037001405c6e80001988e484440012240080401041b000003, value: 0x0




==== Exception State ====


SWC ID: 110


Severity: Medium


Contract: USDCToken


Function name: transfer(address,uint256) or transfer(address,uint256) or transfer(address,uint256) or transfer(address,uint256) or transfer(address,uint256) or transfer(address,uint256) or transfer(address,uint256)


PC address: 11283


Estimated Gas Usage: 6399 - 7864


An assertion violation was triggered.


It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).


--------------------


In file: /home/mythril/2.sol:131




ances[owner] = balances[owner].a




--------------------


Initial State:




Account: [CREATOR], balance: 0x68401, nonce:0, storage:{}


Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}




Transaction Sequence:




Caller: [CREATOR], calldata: , value: 0x0


Caller: [CREATOR], function: transfer(address,uint256), txdata: 0xa9059cbb000000000000000000000000000000000000000000000000000000000000000000008010241080040200a8089201000000406910000000000003112240000001, value: 0x0